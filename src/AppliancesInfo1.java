/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
//import java.lang.System.Logger.Level;
import javax.swing.*;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.awt.Desktop;

/**
 *
 * @author AASHISH
 */
public class AppliancesInfo1 extends javax.swing.JFrame {

    /**
     * Creates new form AppliancesInfo
     */
    public AppliancesInfo1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        topPannel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        midPannel = new javax.swing.JPanel();
        lvlProduct = new javax.swing.JLabel();
        pIdTxtFld = new javax.swing.JTextField();
        lvlPName = new javax.swing.JLabel();
        pNameTxtFld = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pCatTxtFld = new javax.swing.JTextField();
        lvlPBrand = new javax.swing.JLabel();
        brandCombo = new javax.swing.JComboBox<>();
        lvlPrice = new javax.swing.JLabel();
        priceTxtFld = new javax.swing.JTextField();
        discountTxtFld = new javax.swing.JTextField();
        lvlDiscount = new javax.swing.JLabel();
        lvlPriceRate = new javax.swing.JLabel();
        radLow = new javax.swing.JRadioButton();
        radHigh = new javax.swing.JRadioButton();
        slider = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        btmPannel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        catCombo = new javax.swing.JComboBox<>();
        srchCatBtn = new javax.swing.JButton();
        searchByPriceBtn = new javax.swing.JButton();
        srchPriceFld = new javax.swing.JTextField();
        updateTableBtn = new javax.swing.JButton();
        dltBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu1 = new javax.swing.JMenu();
        mItenOpen = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mItemExit = new javax.swing.JMenuItem();
        menu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        topPannel.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 153));
        jLabel1.setText("Mountain Gears Nepal Information System");

        javax.swing.GroupLayout topPannelLayout = new javax.swing.GroupLayout(topPannel);
        topPannel.setLayout(topPannelLayout);
        topPannelLayout.setHorizontalGroup(
            topPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPannelLayout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        topPannelLayout.setVerticalGroup(
            topPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPannelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        midPannel.setBackground(new java.awt.Color(51, 51, 51));
        midPannel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lvlProduct.setBackground(new java.awt.Color(51, 51, 51));
        lvlProduct.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lvlProduct.setForeground(new java.awt.Color(255, 255, 153));
        lvlProduct.setText("Product ID");

        pIdTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pIdTxtFldKeyPressed(evt);
            }
        });

        lvlPName.setBackground(new java.awt.Color(51, 51, 51));
        lvlPName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lvlPName.setForeground(new java.awt.Color(255, 255, 153));
        lvlPName.setText("Product Name");

        pNameTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pNameTxtFldKeyPressed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(51, 51, 51));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 153));
        jLabel5.setText("Product Category");

        pCatTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pCatTxtFldKeyPressed(evt);
            }
        });

        lvlPBrand.setBackground(new java.awt.Color(51, 51, 51));
        lvlPBrand.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lvlPBrand.setForeground(new java.awt.Color(255, 255, 153));
        lvlPBrand.setText("Product Brand");

        brandCombo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        brandCombo.setForeground(new java.awt.Color(51, 51, 51));
        brandCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select Brand--", "North Face", "Millet", "Patagonia", "Mammut" }));

        lvlPrice.setBackground(new java.awt.Color(51, 51, 51));
        lvlPrice.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lvlPrice.setForeground(new java.awt.Color(255, 255, 153));
        lvlPrice.setText("Price");

        priceTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTxtFldKeyPressed(evt);
            }
        });

        discountTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discountTxtFldKeyPressed(evt);
            }
        });

        lvlDiscount.setBackground(new java.awt.Color(51, 51, 51));
        lvlDiscount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lvlDiscount.setForeground(new java.awt.Color(255, 255, 153));
        lvlDiscount.setText("Discount");

        lvlPriceRate.setBackground(new java.awt.Color(51, 51, 51));
        lvlPriceRate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lvlPriceRate.setForeground(new java.awt.Color(255, 255, 153));
        lvlPriceRate.setText("Price Rating");

        radLow.setBackground(new java.awt.Color(51, 51, 51));
        buttonGroup.add(radLow);
        radLow.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        radLow.setForeground(new java.awt.Color(255, 255, 153));
        radLow.setText("Low");

        radHigh.setBackground(new java.awt.Color(51, 51, 51));
        buttonGroup.add(radHigh);
        radHigh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        radHigh.setForeground(new java.awt.Color(255, 255, 153));
        radHigh.setText("High");

        slider.setBackground(new java.awt.Color(51, 51, 51));
        slider.setForeground(new java.awt.Color(255, 255, 153));
        slider.setMajorTickSpacing(1);
        slider.setMaximum(5);
        slider.setPaintLabels(true);
        slider.setPaintTicks(true);
        slider.setValue(0);
        slider.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        slider.setCursor(new java.awt.Cursor(java.awt.Cursor.S_RESIZE_CURSOR));

        jLabel10.setBackground(new java.awt.Color(51, 51, 51));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 153));
        jLabel10.setText("Product Rating");

        addBtn.setBackground(new java.awt.Color(51, 51, 51));
        addBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 153));
        addBtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\AASHISH\\OneDrive\\Desktop\\FirstCourseWork\\src\\Icon\\icons8-plus-26_3.png")); // NOI18N
        addBtn.setText("Add To Table");
        addBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(51, 51, 51));
        clearBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 153));
        clearBtn.setText("Clear");
        clearBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout midPannelLayout = new javax.swing.GroupLayout(midPannel);
        midPannel.setLayout(midPannelLayout);
        midPannelLayout.setHorizontalGroup(
            midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(midPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(midPannelLayout.createSequentialGroup()
                        .addComponent(lvlPriceRate, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(radLow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(radHigh, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(midPannelLayout.createSequentialGroup()
                        .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(midPannelLayout.createSequentialGroup()
                                .addComponent(lvlPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(priceTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(discountTxtFld, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)))
                            .addGroup(midPannelLayout.createSequentialGroup()
                                .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(midPannelLayout.createSequentialGroup()
                                        .addComponent(lvlProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(pIdTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(midPannelLayout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pCatTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 325, Short.MAX_VALUE)
                                .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lvlDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(midPannelLayout.createSequentialGroup()
                                        .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lvlPBrand, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                            .addComponent(lvlPName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(pNameTxtFld)
                                            .addComponent(brandCombo, 0, 135, Short.MAX_VALUE)))
                                    .addComponent(jLabel10))))
                        .addGap(16, 16, 16))
                    .addGroup(midPannelLayout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(addBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(214, 214, 214))))
        );
        midPannelLayout.setVerticalGroup(
            midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(midPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lvlProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pIdTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lvlPName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pCatTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lvlPBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(brandCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lvlPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lvlDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(discountTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(priceTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(midPannelLayout.createSequentialGroup()
                        .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radLow)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radHigh))
                    .addComponent(lvlPriceRate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(midPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        btmPannel.setBackground(new java.awt.Color(51, 51, 51));
        btmPannel.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setBackground(new java.awt.Color(51, 51, 51));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 153));
        jLabel4.setText("Appliances Information System");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Product Category", "Product Brand", "Price", "Discount", "Price Rating", "Product Rating"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        catCombo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        catCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category", "Backpack", "Tech Equipment", "Clothing", "Camping Gear", "Kit" }));

        srchCatBtn.setBackground(new java.awt.Color(51, 51, 51));
        srchCatBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        srchCatBtn.setForeground(new java.awt.Color(255, 255, 153));
        srchCatBtn.setText("Search by Category");
        srchCatBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        srchCatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srchCatBtnActionPerformed(evt);
            }
        });

        searchByPriceBtn.setBackground(new java.awt.Color(51, 51, 51));
        searchByPriceBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchByPriceBtn.setForeground(new java.awt.Color(255, 255, 153));
        searchByPriceBtn.setText("Search by Price");
        searchByPriceBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchByPriceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByPriceBtnActionPerformed(evt);
            }
        });

        srchPriceFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                srchPriceFldKeyPressed(evt);
            }
        });

        updateTableBtn.setBackground(new java.awt.Color(51, 51, 51));
        updateTableBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updateTableBtn.setForeground(new java.awt.Color(255, 255, 153));
        updateTableBtn.setText("Update Table");
        updateTableBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTableBtnActionPerformed(evt);
            }
        });

        dltBtn.setBackground(new java.awt.Color(51, 51, 51));
        dltBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dltBtn.setForeground(new java.awt.Color(255, 255, 153));
        dltBtn.setText("Delete");
        dltBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dltBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dltBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btmPannelLayout = new javax.swing.GroupLayout(btmPannel);
        btmPannel.setLayout(btmPannelLayout);
        btmPannelLayout.setHorizontalGroup(
            btmPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btmPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(catCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(srchCatBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 278, Short.MAX_VALUE)
                .addComponent(srchPriceFld, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchByPriceBtn)
                .addGap(20, 20, 20))
            .addComponent(jScrollPane1)
            .addGroup(btmPannelLayout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addComponent(updateTableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 246, Short.MAX_VALUE)
                .addComponent(dltBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(207, 207, 207))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btmPannelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(260, 260, 260))
        );
        btmPannelLayout.setVerticalGroup(
            btmPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btmPannelLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(btmPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(srchPriceFld, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(btmPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(srchCatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchByPriceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(catCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(btmPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dltBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        menu1.setText("File");

        mItenOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mItenOpen.setText("Open Project");
        mItenOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItenOpenActionPerformed(evt);
            }
        });
        menu1.add(mItenOpen);
        menu1.add(jSeparator1);

        mItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mItemExit.setText("Exit");
        mItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemExitActionPerformed(evt);
            }
        });
        menu1.add(mItemExit);

        jMenuBar1.add(menu1);

        menu2.setText("Help");
        menu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(menu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(midPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btmPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(midPannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btmPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //method is used to get the value from the radio button
    public String radioBtn(){
        //variable to store the value of radio button
        String radBtn;
        if (radLow.isSelected()){
            radBtn = radLow.getText();
            return radBtn;
        }
        if (radHigh.isSelected()){
            radBtn = radHigh.getText();
            return radBtn;
        }
        return null;
        
    }
    
    //method to clear the value from the fields
    public void clr(){
       pIdTxtFld.setText("");
       pNameTxtFld.setText("");
       pCatTxtFld.setText("");
       brandCombo.setSelectedIndex(0);
       priceTxtFld.setText("");
       discountTxtFld.setText("");
       buttonGroup.clearSelection();
       slider.setValue(0);
       catCombo.setSelectedIndex(0);
       srchPriceFld.setText("");
       
    }
    
    //Sorting the array
    public static void sort(Double [] a){
        if(a.length <= 1){
            return;
        }
        Double [] first = new Double[a.length/2];
        Double [] second = new Double[a.length - first.length];
        for(int i = 0; i<first.length; i++){
            first[i] = a[i];
        }
        for(int i=0; i<second.length; i++){
            second[i] = a[first.length+i];
        }
        sort(first);
        sort(second);
        merge(first, second,a);
    }
    //method to perform merge sort
    public static void merge(Double[] first, Double[] second, Double[] a){
        int iFirst = 0;
        int iSecond = 0;
        int j = 0;
        
        while(iFirst < first.length && iSecond < second.length){
            if(first[iFirst] < second[iSecond]){
                a[j] = first[iFirst];
                iFirst++;
            }
            else{
                a[j] = second[iSecond];
                iSecond++;
            }
            j++;
        }
        while(iFirst< first.length){
            a[j] = first[iFirst];
            iFirst++;
            j++;
        }
        while(iSecond < second.length){
            a[j] = second[iSecond];
            iSecond++;
            j++;
        }
}
    
    //method to perform binary search
    public  void binary(Double[] a, String[] findArray){
        int low = 0;
        int high = a.length-1;
        int find = Integer.parseInt(srchPriceFld.getText());
        int index = binarySearch(low, high, find, a);
        int count = 0;
        //System.out.println("found"+ a[index]);
        if (index != -1){
            while (Double.parseDouble((String)jTable1.getValueAt(count,4)) != (a[index])){
                count++;
            }
            //System.out.println(count++);
            display(count++);
            //System.out.println(count);    
//            System.out.println(Arrays.toString(findArray));
//            System.out.println(Arrays.toString(a));
        }else{
            JOptionPane.showMessageDialog(this,"Searched data is not in the table !","No data",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    //method to display the data when searchbyprice button is clicked
    public void display(int row){
    JOptionPane.showMessageDialog(this, 
                    "Product ID: "+jTable1.getValueAt(row, 0) + "\n"
                    + "Product Name: "+jTable1.getValueAt(row, 1) + "\n"
                    + "Product Category: "+jTable1.getValueAt(row, 2) + "\n"
                    + "Product Brand: "+jTable1.getValueAt(row, 3) + "\n"
                    + "Price: "+jTable1.getValueAt(row, 4)+ "\n"
                    + "Discount: "+jTable1.getValueAt(row, 5) + "\n"
                    + "Price Rating : "+jTable1.getValueAt(row, 6) + "\n"
                    + "Product Rating: "+jTable1.getValueAt(row, 7), "Details",
                    JOptionPane.INFORMATION_MESSAGE);
}
    
// method which returns the index of matched data   
    public static int binarySearch(int low,int high, int find, Double[] a){
        if(low <=high){
            int mid = (low + high)/2;
            if(a[mid] == find){
                return mid;
            }else if(a[mid] < find){
                return binarySearch(mid+1, high, find, a);
            }else{
                return binarySearch(low, mid-1, find, a);
        }
        
    }else{
            return -1;
        }
    }
     
    
    //method to add the data in the table
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        String productID = pIdTxtFld.getText().trim();
        String productName = pNameTxtFld.getText().trim();
        String productCategory = pCatTxtFld.getText().trim();
        String brand = (String)brandCombo.getSelectedItem();
        String price = priceTxtFld.getText().trim();
        String discount = discountTxtFld.getText().trim();
        String priceRate = radioBtn();
        String rating = Integer.toString(slider.getValue());
        String data = (String)jTable1.getValueAt(0,0);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
  
        
        if (!productID.isEmpty()){
            if (!productName.isEmpty()){
                if (!productCategory.isEmpty()){
                    if (brandCombo.getSelectedIndex()!=0){
                        if (!price.isEmpty()){
                            if (!discount.isEmpty()){
                                if(Integer.parseInt(discount) < Integer.parseInt(price)){
                                if (priceRate !=null){
                                    if(!rating.equals("0")){
                                    if (data != null){
                                        int count = 0;
                                        int loop = 0;
                                        try{
                                            while (loop < jTable1.getRowCount()){
                                                if (jTable1.getValueAt(loop, 0).toString().equals(pIdTxtFld.getText().trim())){
    //                                                System.out.println(jTable1.getValueAt(loop, 0).toString().trim());
    //                                                System.out.println(pIdTxtFld.getText().trim());
                                                    count++;
                                                }

                                                loop++;

                                            }
                                        }catch( NullPointerException ex){
                                               System.out.println("Caught");
                                         }
                                        if (count == 0){
                                            String value[] = {productID, productName, productCategory, brand, price, discount, priceRate, rating};
        //                                    System.out.println(Arrays.toString(value));
                                            // counting the table row
                                            int row = jTable1.getRowCount();

                                             // counting the table column;
                                            int column = jTable1.getColumnCount();

                                             // to check row is empty or not
                                            int nextRow = 0;
                                            boolean emptyRowFlag = false;
                                            String s;

                                            do {

                                                s = (String) jTable1.getValueAt(nextRow, 0);
                                                if (s != null && s.length()!= 0){
                                                    nextRow++;
                                                }else{
                                                    emptyRowFlag = true;
                                                }
                                            }while(nextRow < row && !emptyRowFlag);
                                             for(int i=0; i<column; i++){
                                                jTable1.setValueAt(value[i], nextRow, i);
                                               }
                                             JOptionPane.showMessageDialog(this,"Data successfully added!","Data Added ",JOptionPane.INFORMATION_MESSAGE);
                                        }else{
                                            JOptionPane.showMessageDialog(this,"Same data!","Same data",JOptionPane.ERROR_MESSAGE);
                                        }
                                          
                                    }else{
                                        JOptionPane.showMessageDialog(this,"Table is empty.Please import fist!","Import data",JOptionPane.ERROR_MESSAGE);
                                    }
                                    }else{
                                        JOptionPane.showMessageDialog(null,"Please choose valid Product Rating","Product Rating",JOptionPane.ERROR_MESSAGE);
                                  
                                    }
                                }else{
                                    JOptionPane.showMessageDialog(null,"Please select the price Rating","Price Ratin",JOptionPane.ERROR_MESSAGE);
                                }
                                }else{
                                    JOptionPane.showMessageDialog(null,"Please enter Valid Discount","Discount Error",JOptionPane.ERROR_MESSAGE);
                                }
                            }else{
                                JOptionPane.showMessageDialog(null,"Please enter the Discount","Discount",JOptionPane.ERROR_MESSAGE);
                            }
                        }else{
                            JOptionPane.showMessageDialog(null,"Please enter the Price","Price",JOptionPane.ERROR_MESSAGE);
                        }
                    }else{
                        JOptionPane.showMessageDialog(null,"Please select the Brand","Brand",JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"Please enter the Product Category","Product Category",JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null,"Please enter the Product Name","Product Name",JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null,"Please enter the Product ID","Product ID",JOptionPane.ERROR_MESSAGE);
        }
        
        
        

        
        
    }//GEN-LAST:event_addBtnActionPerformed

    //method which allows to enter only digit in the product id
    private void pIdTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pIdTxtFldKeyPressed
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || evt.getKeyCode()== 8){
            pIdTxtFld.setEditable (true);
        }else{
            pIdTxtFld.setEditable (false);
        }
    }//GEN-LAST:event_pIdTxtFldKeyPressed

    //method which allows to enter only characters in the product id
    private void priceTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTxtFldKeyPressed
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || evt.getKeyCode()== 8 || evt.getKeyCode()== 46){
            priceTxtFld.setEditable (true);
        }else{
            priceTxtFld.setEditable (false);
        }
    }//GEN-LAST:event_priceTxtFldKeyPressed

    //method which allows to enter only digit in the product id
    private void discountTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountTxtFldKeyPressed
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || evt.getKeyCode()== 8 || evt.getKeyCode()== 46){
            discountTxtFld.setEditable (true);
        }else{
            discountTxtFld.setEditable (false);
        }
    }//GEN-LAST:event_discountTxtFldKeyPressed
    
        //method which allows to enter only characters in the product id
    private void pNameTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pNameTxtFldKeyPressed
       char c = evt.getKeyChar();
        if (!Character.isDigit(c) || evt.getKeyCode()== 8){
            pNameTxtFld.setEditable (true);
        }else{
            pNameTxtFld.setEditable (false);
        }
    }//GEN-LAST:event_pNameTxtFldKeyPressed

        //method which allows to enter only characters in the product id
    private void pCatTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pCatTxtFldKeyPressed
       char c = evt.getKeyChar();
        if (!Character.isDigit(c) || evt.getKeyCode()== 8){
            pCatTxtFld.setEditable (true);
        }else{
            pCatTxtFld.setEditable (false);
        }

    }//GEN-LAST:event_pCatTxtFldKeyPressed

    //method which allows to open project in the system
    private void mItenOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItenOpenActionPerformed
        // TODO add your handling code here:
        //path of the .csv file
        String b = (String)jTable1.getValueAt(0, 0);
        if(b == null){
        String filePath="E:/JavaProjects/FirstCourseWork/Data.csv";
        try {
            BufferedReader bufferreader=new BufferedReader(new FileReader(filePath));
            String line="";
            while((line=bufferreader.readLine())!=null){
                String[] data=line.split(",");
                int row = jTable1.getRowCount();
                int column = jTable1.getColumnCount();
                int nextRow = 0;
                boolean emptyRowFlag = false;
                String s;
                                    
                do {
                                        
                    s = (String) jTable1.getValueAt(nextRow, 0);
                    if (s != null && s.length()!= 0){
                            nextRow++;
                    }else{
                        emptyRowFlag = true;
                    }
                    }while(nextRow < row && !emptyRowFlag);
                        for(int i=0; i<column; i++){
                            jTable1.setValueAt(data[i], nextRow, i);
                        }
            }

        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            Logger.getLogger(AppliancesInfo1.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(this,"Data has already been imported!","Import Data",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_mItenOpenActionPerformed

    //method which allows to search the product deatails based on product category
    private void srchCatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srchCatBtnActionPerformed
        // TODO add your handling code here:
        String cate = catCombo.getSelectedItem().toString();
        ArrayList<Integer> position = new ArrayList<Integer>();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        try{
            for (int i = 0; i < model.getRowCount(); i++) {
                if(cate.equals(model.getValueAt(i, 2).toString())) {
                    position.add(i);
                }
            }
        }catch( NullPointerException ex){
            System.out.println("Caught");
        }

        if(position.isEmpty() && catCombo.getSelectedIndex()== 0) {
            JOptionPane.showMessageDialog(this, "Table is empty or Select the Category!", "Empty Table", JOptionPane.ERROR_MESSAGE);           
        }
        else {
            //Extraction of product from Jtable
            int counter = 0;
            String[] tempArrName = new String[position.size()];
            for (int i = 0; i < position.size(); i++) {
               String itemName = model.getValueAt(position.get(i), 1).toString();
               tempArrName[i] = itemName;
               counter += 1;
            }
            String output = "";
            for (int i = 0; i < tempArrName.length; i++) {
                output += tempArrName[i] + "\r\n";
            }

            switch (counter) {
                case 0:
                    JOptionPane.showMessageDialog(this, "There is no avaliable product in " + cate, "Avaliable products", JOptionPane.PLAIN_MESSAGE);
                    break;
                case 1:
                    JOptionPane.showMessageDialog(this, "There is " + counter + " " + cate +"\r\n" + output, "Available Products", JOptionPane.PLAIN_MESSAGE);
                    break;
                default:
                    JOptionPane.showMessageDialog(this, "There are " + counter + " " + cate +"s in the list. They are:\r\n" + output, "Available Products", JOptionPane.PLAIN_MESSAGE);
                    break;
            }
        }

    }//GEN-LAST:event_srchCatBtnActionPerformed

    //method to clear the fields of the system
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        clr();
    }//GEN-LAST:event_clearBtnActionPerformed

    //method to exit from the system 
    private void mItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemExitActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this, "Do you want to exit?", "Exit", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_mItemExitActionPerformed

    //method to open the user manual in the system
    private void menu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu2MouseClicked
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this, "Open User Manual?", "Open", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION){
        File file=new File("C:/Users/Ayush Sharma/Documents/UserManual.pdf");
        try {
            Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "File not found");
            }
        }
    }//GEN-LAST:event_menu2MouseClicked

    //method to delete the row of data from the table
    private void dltBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dltBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int i = jTable1.getSelectedRow();
        if (i > -1){
            model.removeRow(i);
            JOptionPane.showMessageDialog(null,"Data successfully Deleted","Row Deleted",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(null,"Select the row of the table!","Select Row",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_dltBtnActionPerformed

    //method to update the row of data in the table 
    private void updateTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTableBtnActionPerformed
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int index = jTable1.getSelectedRow();
        String productID = pIdTxtFld.getText().trim();
        String productName = pNameTxtFld.getText().trim();
        String productCategory = pCatTxtFld.getText().trim();
        String brand = (String)brandCombo.getSelectedItem();
        String price = priceTxtFld.getText().trim();
        String discount = discountTxtFld.getText().trim();
        String priceRate = radioBtn();
        String rating = Integer.toString(slider.getValue()).trim();
        
        if (index > -1){
            if (!productID.isEmpty()){
            if (!productName.isEmpty()){
                if (!productCategory.isEmpty()){
                    if (brandCombo.getSelectedIndex()!=0){
                        if (!price.isEmpty()){
                            if (!discount.isEmpty()){
                                if(Integer.parseInt(discount) < Integer.parseInt(price)){
                                if (priceRate !=null){
                                    int count = 0;
                                        int loop = 0;
                                        try{
                                            while (loop < jTable1.getRowCount()){
                                                if (jTable1.getValueAt(loop, 0).toString().equals(pIdTxtFld.getText().trim())){
    //                                                System.out.println(jTable1.getValueAt(loop, 0).toString().trim());
    //                                                System.out.println(pIdTxtFld.getText().trim());
                                                    count++;
                                                }

                                                loop++;

                                            }
                                        }catch( NullPointerException ex){
                                               System.out.println("Caught");
                                         }
                                        if (count == 0){
                                            String value[] = {productID, productName, productCategory, brand, price, discount, priceRate, rating};
                                            for(int i =0; i< jTable1.getColumnCount(); i++){
                                                jTable1.setValueAt(value[i], index, i);
                                                clr();       
                                            }
                                            JOptionPane.showMessageDialog(this,"List updated successfully","List Updated",JOptionPane.INFORMATION_MESSAGE);
                                        }else{
                                            JOptionPane.showMessageDialog(this,"The Product ID already exist. Please try with different Product ID!","Redundant Data",JOptionPane.ERROR_MESSAGE);
                                        }
                                    
                                }else{
                                    JOptionPane.showMessageDialog(null,"Please select the price Rating","Price Ratin",JOptionPane.ERROR_MESSAGE);
                                    
                                }
                                }else{
                                       JOptionPane.showMessageDialog(null,"Please enter Valid Discount","Discount Error",JOptionPane.ERROR_MESSAGE);
                                }
                  
                            }else{
                                JOptionPane.showMessageDialog(null,"Please enter the Discount","Discount",JOptionPane.ERROR_MESSAGE);
                            }
                        }else{
                            JOptionPane.showMessageDialog(null,"Please enter the Price","Price",JOptionPane.ERROR_MESSAGE);
                        }
                    }else{
                        JOptionPane.showMessageDialog(null,"Please select the Brand","Brand",JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"Please enter the Product Category","Product Category",JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null,"Please enter the Product Name","Product Name",JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null,"Please enter the Product ID","Product ID",JOptionPane.ERROR_MESSAGE);
        }
        }
        else{
            JOptionPane.showMessageDialog(null,"Select the row of the table!","Select Row",JOptionPane.ERROR_MESSAGE);
        }   
        
    }//GEN-LAST:event_updateTableBtnActionPerformed

    //method to seartch price and display the details related to the searched price
    private void searchByPriceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByPriceBtnActionPerformed
        // TODO add your handling code here:
        String srchPrice = srchPriceFld.getText();
        if (srchPrice.length()== 0){
            JOptionPane.showMessageDialog(null,"Ente the price to Search!","Search",JOptionPane.ERROR_MESSAGE);
        }else{
            ArrayList<String> secondArray = new ArrayList<String>();
            int nextRow = 0;
            boolean emptyRowFlag = false;
            String s;
            int count = 0;

            do {
                s = (String)jTable1.getValueAt(count, 0);
                if (s != null && s.length()!= 0){
                    for (int i =0; i< jTable1.getColumnCount(); i++){
                        secondArray.add (jTable1.getValueAt(count, i).toString());
                    }
                    count++;
                }else{
                    emptyRowFlag = true;
                }
            }while( !emptyRowFlag);

            ArrayList<Double> price = new ArrayList<Double>();
            for(int i = 4; i < secondArray.size(); i+=8){
               price.add(Double.parseDouble(secondArray.get(i)));
            }
            Double[] priceArray = new   Double[price.size()];
            priceArray = price.toArray(priceArray);

            String[] findArray = new   String[secondArray.size()];
            findArray = secondArray.toArray(findArray);

            sort(priceArray);
            binary(priceArray, findArray);
        }
        
        
                                             
    }//GEN-LAST:event_searchByPriceBtnActionPerformed

    //method which allows to enter only digit in the srchPriceFld 
    private void srchPriceFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srchPriceFldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || evt.getKeyCode()== 8 || evt.getKeyCode()== 46){
            srchPriceFld.setEditable (true);
        }else{
            srchPriceFld.setEditable (false);
        }
    }//GEN-LAST:event_srchPriceFldKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppliancesInfo1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JComboBox<String> brandCombo;
    private javax.swing.JPanel btmPannel;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JComboBox<String> catCombo;
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextField discountTxtFld;
    private javax.swing.JButton dltBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lvlDiscount;
    private javax.swing.JLabel lvlPBrand;
    private javax.swing.JLabel lvlPName;
    private javax.swing.JLabel lvlPrice;
    private javax.swing.JLabel lvlPriceRate;
    private javax.swing.JLabel lvlProduct;
    private javax.swing.JMenuItem mItemExit;
    private javax.swing.JMenuItem mItenOpen;
    private javax.swing.JMenu menu1;
    private javax.swing.JMenu menu2;
    private javax.swing.JPanel midPannel;
    private javax.swing.JTextField pCatTxtFld;
    private javax.swing.JTextField pIdTxtFld;
    private javax.swing.JTextField pNameTxtFld;
    private javax.swing.JTextField priceTxtFld;
    private javax.swing.JRadioButton radHigh;
    private javax.swing.JRadioButton radLow;
    private javax.swing.JButton searchByPriceBtn;
    private javax.swing.JSlider slider;
    private javax.swing.JButton srchCatBtn;
    private javax.swing.JTextField srchPriceFld;
    private javax.swing.JPanel topPannel;
    private javax.swing.JButton updateTableBtn;
    // End of variables declaration//GEN-END:variables
}
